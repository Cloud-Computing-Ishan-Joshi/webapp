name: Node-Healthz

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Node
    runs-on: ubuntu-latest

    # This keyword is used to define the build strategy for your workflow. In this case, it's specifying a matrix strategy
    strategy:
      # This sub-keyword defines a matrix build strategy, which allows you to run your job in multiple configurations
      matrix:
        # This sub-keyword defines the Node.js version to use for the job
        node-version: [18.x]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Use ${{matrix.node-version}} to setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Postgres and Config
        run: |
          sudo apt-get install postgresql postgresql-contrib
          sudo systemctl start postgresql
          sudo systemctl enable postgresql
          sudo systemctl status postgresql
          # # replace ident to scram-sha-256
          # sudo sed -i "s/ident/scram-sha-256/g" /etc/postgresql/15/main/pg_hba.conf
          # # uncomment listen_addresses
          # sudo sed -i "s/#listen_addresses = 'localhost'/listen_addresses = 'localhost'/g" /etc/postgresql/15/main/postgresql.conf
          # # uncomment port
          # sudo sed -i "s/#port = 5432/port = 5432/g" /etc/postgresql/15/main/postgresql.conf
          # sudo systemctl restart postgresql
          # sudo systemctl status postgresql
          sudo su - postgres -c "psql -c \"CREATE DATABASE ${{env.DB_NAME}};\""
          sudo su - postgres -c "psql -c \"CREATE USER ${{env.DB_USER}} WITH PASSWORD '${{env.DB_PASSWORD}}';\""
          sudo su - postgres -c "psql -c \"GRANT ALL PRIVILEGES ON DATABASE ${{env.DB_NAME}} TO ${{env.DB_USER}};\""
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_USER_ORIG: ${{ secrets.DB_USER_ORIG }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}

      - name: Install dependencies
        run: npm install
      
      - name: Run Healthz test
        run: npm run test:cli
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          PORT: ${{ secrets.PORT }}
          NODE_ENV: test

        
      - name: Execute 1 for failure
        if: failure()
        run: exit 1